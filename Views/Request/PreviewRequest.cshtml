@using Debt_Calculation_And_Repayment_System.Data.ViewModels
@using System.Globalization;
@model CreateRequestVM;
@{
    ViewData["Title"] = "Talep Oluştur";
}
@section Title {
    Talep Oluştur
}

<div class="container-fluid px-0 py-5">
    <div class="row mx-0 justify-content-center pt-5">
        <div class="col-lg-6">
            <div class="section-title text-center position-relative mb-4">
                <h6 class="d-inline-block position-relative text-secondary text-uppercase pb-2">Bursiyer</h6>
                <h1 class="display-4">Talep Oluştur</h1>
            </div>
        </div>
    </div>
    <div class="row justify-content-center bg-image mx-0 mb-5">
        <div class="col-lg-6 py-5">
            <div class="bg-white p-5 my-5">
                <h1 class="text-center mb-4">Talebiniz için alanları doldurunuz.</h1>
                <form asp-action="PreviewRequest">
                    <div class="form-row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Toplam Borç</label>
                                <input asp-for="Total" type="number" step="0.01" readonly value="@Model.Total.ToString(CultureInfo.InvariantCulture)" class="form-control bg-light border-0" placeholder="Toplam">
                                <span asp-validation-for="Total" style="color:red"></span>
                                <input type="hidden" value="@Model.studentId" name="studentId" />
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Peşin Ödeyeceğiniz Tutar</label>
                                <input asp-for="ToBePaidFull" type="number" step="0.01" id="toBePaidFull" min=0 class="form-control bg-light border-0" placeholder="Peşinat">
                                <span asp-validation-for="ToBePaidFull" style="color:red"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Taksitlendirmek istediğiniz Tutar</label>
                                <input asp-for="ToBePaidInstallment" type="number" step="0.01" id="toBePaidInstallment" min=0 class="form-control bg-light border-0" placeholder="Taksitlendirilecek Tutar">
                                <span asp-validation-for="ToBePaidInstallment" style="color:red"></span>
                            </div>
                        </div>
                       
                       
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Talep Ettiğiniz Taksit Sayısı</label>
                                    <input asp-for="NumOfMonths" type="number" id="NumOfMonths" class="form-control bg-light border-0" placeholder="Taksit Sayısı">
                                    <span asp-validation-for="NumOfMonths" style="color:red"></span>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>İlk Taksit Ödeme Tarihi</label>
                                @if (User.IsInRole("Admin") || User.IsInRole("StaffMember"))
                                {
                                    @Html.TextBoxFor(m => m.FirstInstallmentDate, "{0:yyyy-MM-dd}", new { @class = "form-control  bg-light border-0", type = "date" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.FirstInstallmentDate, "{0:yyyy-MM-dd}", new { @class = "form-control  bg-light border-0", type = "date",@readonly="true" })

                                }
                                <span asp-validation-for="FirstInstallmentDate" style="color:red"></span>
                                </div>
                            </div>
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label>Açıklama</label>
                                <textarea  asp-for="Description" type="text" multiple="true" class="form-control bg-light border-0" placeholder="Açıklama" ></textarea>
                                
                            </div>
                        </div>
                        
                    </div>
                    <div class="col-sm-6" style="width:50%;margin: 0 auto;">
                        <button class="btn btn-primary btn-block" type="submit" style="height: 60px;" value="PreviewRequest">Talep Önizle</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        // Get the input elements
        var toBePaidInstallmentInput = document.getElementById("toBePaidInstallment");
        var toBePaidFullInput = document.getElementById("toBePaidFull");
        var totalInput = document.getElementById("Total");
        var numOfMonthsInput = document.getElementById("NumOfMonths");

        // Add event listener to toBePaidInstallmentInput
        toBePaidInstallmentInput.addEventListener("input", updateToBePaidFull);

        // Add event listener to toBePaidFullInput
        toBePaidFullInput.addEventListener("input", updateToBePaidInstallment);

        // Add event listener to numOfMonthsInput
        numOfMonthsInput.addEventListener("input", updateToBePaidInstallment);

        // Function to update ToBePaidFull field
        function updateToBePaidFull() {
            var toBePaidInstallmentValue = parseFloat(toBePaidInstallmentInput.value) || 0;
            console.log(toBePaidInstallmentValue);
            var totalValue = parseFloat(totalInput.value) || 0;
            console.log(totalValue);
            var toBePaidFullValue = totalValue - toBePaidInstallmentValue;
            console.log(toBePaidFullValue);
            toBePaidFullInput.value = toBePaidFullValue.toFixed(2); // Round to 2 decimal places
            console.log(toBePaidFullInput.value);
        }

        // Function to update ToBePaidInstallment field
        function updateToBePaidInstallment() {
            var toBePaidFullValue = parseFloat(toBePaidFullInput.value) || 0;
            var totalValue = parseFloat(totalInput.value) || 0;
            var numOfMonthsValue = parseFloat(numOfMonthsInput.value) || 0;
            //if (toBePaidInstallmentInput.value === "0" && numOfMonthsValue === 0) {
            //    toBePaidFullInput.value = totalValue.toFixed(2); // Round to 2 decimal places
            //} else {
                var toBePaidInstallmentValue = totalValue - toBePaidFullValue;
                toBePaidInstallmentInput.value = toBePaidInstallmentValue.toFixed(2); // Round to 2 decimal places
            //}
        }
    </script>
}






